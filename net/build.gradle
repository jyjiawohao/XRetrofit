apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

//定义版本号
def retrofit_version = "2.2.0"
def rxjava_version = "2.0.9"

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'

    //RxJava的依赖包
    compile 'io.reactivex.rxjava2:rxjava:'+rxjava_version
    //RxAndroid的依赖包
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //Rxjava+Retrofit 用到的 一个 依赖， 使接口回调的数据 以Rxjava形式 供我们接受
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0-RC3'

    //Retrofit 的依赖包
    compile 'com.squareup.retrofit2:retrofit:'+retrofit_version
    //自动将服务器返回的数据 以及 我们传给一个JavaBean 实体，转换成json。
    compile 'com.squareup.retrofit2:converter-gson:'+retrofit_version
    //gson 实体解析库
    compile 'com.google.code.gson:gson:2.6.2'
    //日志拦截器
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
}
